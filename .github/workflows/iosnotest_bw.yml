name: iOS parallel test workflow

permissions:
      contents: write
      pull-requests: write
      id-token: write

on:
  workflow_call:
    secrets:
      BW_ACCESS_TOKEN:
        required: true
      PAT_TOKEN:
        required: true

jobs:

  deploy-beta:
#    if: github.ref == 'refs/heads/testing'
    name: Deploy to Test Flight
    runs-on: macos-latest # Use a macOS runner for iOS builds
    env:
      CURRENT_BRANCH: ${{ github.ref_name }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Checkout the repository code
        with:
          submodules: 'recursive'
          fetch-depth: 0
          token: ${{ secrets.PAT_TOKEN }} # Required for private submodules
  
      - name: Install Bitwarden Secrets Manager CLI (bws)
        run: |
          BWS_VERSION="1.0.0" # adjust to current release
          curl -L -o bws.zip "https://github.com/bitwarden/sdk/releases/download/bws-v${BWS_VERSION}/bws-aarch64-apple-darwin-${BWS_VERSION}.zip"
          unzip -q bws.zip -d /usr/local/bin
          chmod +x /usr/local/bin/bws
          bws --version
      - name: Get Secrets via bws
        env:
          BWS_ACCESS_TOKEN: ${{ secrets.BW_ACCESS_TOKEN }}
        run: |
          bws secret get e9bb4989-b39f-43a3-bc4d-b361011cbb23 --output env >> $GITHUB_ENV
          bws secret get 165e90ae-bed4-41bb-9ec0-b361011ba441 --output env >> $GITHUB_ENV
          bws secret get 2afaa8d6-cadf-45c9-bdbb-b361011ba3f0 --output env >> $GITHUB_ENV
          bws secret get acef0f47-efa1-4036-9584-b361011ba349 --output env >> $GITHUB_ENV
          bws secret get e70fbaf0-de89-4a23-a70b-b361011ba3a1 --output env >> $GITHUB_ENV
          bws secret get 7db286e9-c069-417a-b8cc-b36101279e25 --output env >> $GITHUB_ENV
      - name: Add mask
        run: | 
          echo "::add-mask::$APP_STORE_CONNECT_API_KEY_ISSUER_ID"
          echo "::add-mask::$APP_STORE_CONNECT_API_KEY_KEY"
          echo "::add-mask::$APP_STORE_CONNECT_API_KEY_KEY_ID"
          echo "::add-mask::$FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD"
          #echo "::add-mask::$MATCH_GIT_BASIC_AUTHORIZATION"
          echo "::add-mask::$MATCH_PASSWORD"
     
    
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: '3.2' # Specify your Ruby version
          bundler-cache: true # Install Gemfile dependencies with bundler

      - name: Install Fastlane
        run: bundle install
 
      - name: Set PROJECT_NAME environment variable
        id: set_project_name # Add an ID to the step to create an output variable
        run: |
          # Find the .xcodeproj file, remove the .xcodeproj extension, and assign it to the variable.
          PROJECT_NAME=$(basename *.xcodeproj .xcodeproj)
          
          # Write the variable to the GITHUB_ENV file so it's available to subsequent steps.
          echo "PROJECT_NAME=$PROJECT_NAME" >> "$GITHUB_ENV"
          
          # Write the variable to the GITHUB_OUTPUT file so it can be used by other jobs.
          echo "project_name=$PROJECT_NAME" >> "$GITHUB_OUTPUT"

      - name: Run Fastlane Beta Lane
        run: bundle exec fastlane beta # Execute your 'beta' lane defined in Fastfile

